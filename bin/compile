#!/usr/bin/env bash

# If this var is set to true later on,
# then elixir and rebar will be rebuilt
erlang_changed=false
rebar_changed=false
elixir_changed=false

build_pack_path=$(cd $(dirname $(dirname $0)); pwd)

# Ensure dirs are present
mkdir -p $1 $2

echo "CACHE DIR contents"
ls $2

build_path=$(cd $1 && pwd)
cache_path=$(cd $2 && pwd)
platform_tools_path="${build_path}/.platform_tools"

mkdir $platform_tools_path

erlang_path="${platform_tools_path}/erlang"
elixir_path="${platform_tools_path}/elixir"
rebar_path="${platform_tools_path}/rebar"

erlang_build_path="${cache_path}/erlang"
elixir_build_path="${cache_path}/elixir"
rebar_build_path="${cache_path}/rebar"

source ${build_pack_path}/lib/misc_funcs.sh
source ${build_pack_path}/lib/erlang_funcs.sh
source ${build_pack_path}/lib/elixir_funcs.sh
source ${build_pack_path}/lib/rebar_funcs.sh
source ${build_pack_path}/lib/app_funcs.sh


commands_to_run=(
  infer_versions

  download_erlang
  install_erlang

  download_rebar
  build_rebar
  install_rebar

  download_elixir
  build_elixir
  install_elixir

  app_dependencies
  compile_app
  write_profile_d_script
)

for command in "${commands_to_run[@]}"
do
  eval $command
done
