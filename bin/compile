#!/usr/bin/env bash

# If this var is set to true later on,
# then elixir and rebar will be rebuilt
erlang_changed=false
rebar_changed=false
elixir_changed=false

build_pack_path=$(cd $(dirname $(dirname $0)); pwd)

# Ensure dirs are present
mkdir -p $1 $2 $3

build_path=$(cd $1 && pwd)
cache_path=$(cd $2 && pwd)
env_path=$(cd $2 && pwd)

# Make the DATABASE_URL available.
# Useful for compiled languages like Erlang and Elixir
if [ -d $env_path ] && [ -f $env_path/DATABASE_URL ]; then
  export DATABASE_URL=$(cat $env_dir/DATABASE_URL)
fi

echo $DATABASE_URL

source ${build_pack_path}/lib/path_funcs.sh
source ${build_pack_path}/lib/misc_funcs.sh
source ${build_pack_path}/lib/erlang_funcs.sh
source ${build_pack_path}/lib/elixir_funcs.sh
source ${build_pack_path}/lib/rebar_funcs.sh
source ${build_pack_path}/lib/app_funcs.sh

mkdir $(platform_tools_path)

commands_to_run=(
  load_config

  download_erlang
  install_erlang

  download_rebar
  build_rebar
  install_rebar

  download_elixir
  build_elixir
  install_elixir

  restore_backups_if_needed
  app_dependencies
  compile_app
  backup_deps_and_build_if_needed
  write_profile_d_script
)

for command in "${commands_to_run[@]}"
do
  eval $command
done
